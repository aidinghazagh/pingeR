files ?
;
files?
;
file?
f
write?
;
?files
setwd("C:/Users/u/R")
file.create("temps.R")
load("temps.RData")
load("temps.RData")
temps
load("C:/Users/u/R/temps.RData")
temps[1]
temps[0]
temps[2]
mean(temps)
temps[c(2, 4, 7)]
temps[-c(2, 4, 7)]
temps[]
temps[-1]
temps[> 0]
temps[...> 0]
temps[.> 0]
temps[...] > 0
temps[] > 0
temps %>% [] > 0
temps > 0
temps < 0
which(temps < 0)
which(temps < 0)
which(temps > 50)
which(temps > 60)
which(temps < 0 || temps > 60)
which(temps < 0 or temps > 60)
which(temps < 0 | temps > 60)
temps[which(temps < 0 | temps > 60)]
temps = temps[ -which(temps < 0 | temps > 60)]
temps <- temps[ -which(temps < 0 | temps > 60)]
temps
?musicvisu
?devtools
?tidyverse
?ggplot2
install.packages("languageserver")
library(ggplot2)
getwd()
devtools::create("pingeR")
getwd()
setwd("pingeR")
load()
library(devtools)
load_all()
load_all()
load_all()
start_pinging()
start_pinging("/")
getwd()
start_pinging("C:/Users/u/R/pingeR/R")
start_pinging <- function(destination, hour = 24, ip = "8.8.8.8"){
# Initialize an empty data frame to store results
ping_log <- data.frame(Timestamp = character(), PingTime = numeric(), Status = character(), stringsAsFactors = FALSE)
# Define the duration to run the loop (e.g., 1 hour)
end_time <- Sys.time() + as.difftime(24, units = "hours")
# Run the pinging process
tryCatch({
while (Sys.time() < end_time) {
ping_result <- ping_ip(ip)
ping_log <- rbind(ping_log, ping_result)
Sys.sleep(1)  # Wait for 1 second between pings
}
write.csv(ping_log, paste0(destination, "ping_log.csv"), row.names = FALSE)
}, interrupt = function(ex) {
cat("Loop interrupted by the user!\n")
})
}
start_pinging("C:/Users/u/R/pingeR")
start_pinging("C:/Users/u/R/pingeR")
start_pinging("C:/Users/u/R/pingeR")
start_pinging("C:/Users/u/R/pingeR")
start_pinging("C:/Users/u/R/pingeR")
start_pinging("C:/Users/u/R/pingeR")
unload()
start_pinging("C:/Users/u/R/pingeR")
load_all()
load_all()
start_pinging("C:/Users/u/R/pingeR")
start_pinging("C:/Users/u/R/pingeR")
load_all()
start_pinging("C:/Users/u/R/pingeR")
load_all()
start_pinging("C:/Users/u/R/pingeR")
# Initialize an empty data frame to store results
ping_log <- data.frame(Timestamp = character(), PingTime = numeric(), Status = character(), stringsAsFactors = FALSE)
# Define the duration to run the loop (e.g., 1 hour)
end_time <- Sys.time() + as.difftime(5, units = "secs")
ping_result <- ping_ip(ip)
View(ping_log)
ping_log("4.2.2.4")
build()
library(pingeR)
start_pinging("C:/Users/u/R/pingeR")
# Run the pinging process
tryCatch({
while (Sys.time() < end_time) {
ping_result <- ping_ip(ip)
ping_log <- rbind(ping_log, ping_result)
write.csv(ping_log, paste0(destination, "ping_log.csv"), row.names = FALSE)
if(feedback){
cat("New record added", ping_result[0, 1], "\n")
}
Sys.sleep(1)  # Wait for 1 second between pings
}
}, interrupt = function(ex) {
cat("Loop interrupted by the user!\n")
})
start_pinging("C:/Users/u/R/pingeR")
start_pinging <- function(destination, hour = 24, ip = "8.8.8.8", feedback = TRUE){
# Initialize an empty data frame to store results
ping_log <- data.frame(Timestamp = character(), PingTime = numeric(), Status = character(), stringsAsFactors = FALSE)
# Define the duration to run the loop (e.g., 1 hour)
end_time <- Sys.time() + as.difftime(5, units = "secs")
# Run the pinging process
tryCatch({
while (Sys.time() < end_time) {
ping_result <- ping_ip(ip)
ping_log <- rbind(ping_log, ping_result)
write.csv(ping_log, paste0(destination, "ping_log.csv"), row.names = FALSE)
if(feedback){
cat("New record added", ping_result[0, 1], "\n")
}
Sys.sleep(1)  # Wait for 1 second between pings
}
}, interrupt = function(ex) {
cat("Loop interrupted by the user!\n")
})
}
unload()
source(ping_ip)
start_pinging <- function(destination, hour = 24, ip = "8.8.8.8", feedback = TRUE){
source("ping_ip.R")
# Initialize an empty data frame to store results
ping_log <- data.frame(Timestamp = character(), PingTime = numeric(), Status = character(), stringsAsFactors = FALSE)
# Define the duration to run the loop (e.g., 1 hour)
end_time <- Sys.time() + as.difftime(5, units = "secs")
# Run the pinging process
tryCatch({
while (Sys.time() < end_time) {
ping_result <- ping_ip(ip)
ping_log <- rbind(ping_log, ping_result)
write.csv(ping_log, paste0(destination, "ping_log.csv"), row.names = FALSE)
if(feedback){
cat("New record added", ping_result[0, 1], "\n")
}
Sys.sleep(1)  # Wait for 1 second between pings
}
}, interrupt = function(ex) {
cat("Loop interrupted by the user!\n")
})
}
start_pinging("C:/Users/u/R/pingeR")
# Run the pinging process
tryCatch({
while (Sys.time() < end_time) {
ping_result <- ping_ip(ip)
ping_log <- rbind(ping_log, ping_result)
write.csv(ping_log, paste0(destination, "ping_log.csv"), row.names = FALSE)
if(feedback){
cat("New record added", ping_result[0, 1], "\n")
}
Sys.sleep(1)  # Wait for 1 second between pings
}
}, interrupt = function(ex) {
cat("Loop interrupted by the user!\n")
})
start_pinging <- function(destination, hour = 24, ip = "8.8.8.8", feedback = TRUE){
source("R/ping_ip.R")
# Initialize an empty data frame to store results
ping_log <- data.frame(Timestamp = character(), PingTime = numeric(), Status = character(), stringsAsFactors = FALSE)
# Define the duration to run the loop (e.g., 1 hour)
end_time <- Sys.time() + as.difftime(5, units = "secs")
# Run the pinging process
tryCatch({
while (Sys.time() < end_time) {
ping_result <- ping_ip(ip)
ping_log <- rbind(ping_log, ping_result)
write.csv(ping_log, paste0(destination, "ping_log.csv"), row.names = FALSE)
if(feedback){
cat("New record added", ping_result[0, 1], "\n")
}
Sys.sleep(1)  # Wait for 1 second between pings
}
}, interrupt = function(ex) {
cat("Loop interrupted by the user!\n")
})
}
start_pinging("C:/Users/u/R/pingeR")
# Initialize an empty data frame to store results
ping_log <- data.frame(Timestamp = character(), PingTime = numeric(), Status = character(), stringsAsFactors = FALSE)
# Define the duration to run the loop (e.g., 1 hour)
end_time <- Sys.time() + as.difftime(5, units = "secs")
ping_result <- ping_ip(ip)
View(ping_result)
ping_log <- rbind(ping_log, ping_result)
write.csv(ping_log, paste0(destination, "ping_log.csv"), row.names = FALSE)
write.csv(ping_log, paste0(destination, "ping_log.csv"), row.names = FALSE)
start_pinging(destination = "C:/Users/u/R/pingeR")
start_pinging <- function(destination, hour = 24, ip = "8.8.8.8", feedback = TRUE){
source("R/ping_ip.R")
# Initialize an empty data frame to store results
ping_log <- data.frame(Timestamp = character(), PingTime = numeric(), Status = character(), stringsAsFactors = FALSE)
# Define the duration to run the loop (e.g., 1 hour)
end_time <- Sys.time() + as.difftime(5, units = "secs")
# Run the pinging process
tryCatch({
while (Sys.time() < end_time) {
ping_result <- ping_ip(ip)
ping_log <- rbind(ping_log, ping_result)
write.csv(ping_log, paste0(destination, "ping_log.csv"), row.names = FALSE)
if(feedback){
cat("New record added", "Ping time: ",ping_result[0, 1], "\n")
}
Sys.sleep(1)  # Wait for 1 second between pings
}
}, interrupt = function(ex) {
cat("Loop interrupted by the user!\n")
})
}
start_pinging(destination = "C:/Users/u/R/pingeR")
destination <- "C:/Users/u/R/pingeR"
write.csv(ping_log, paste0(destination, "ping_log.csv"), row.names = FALSE)
View(ping_log)
View(ping_result)
ping_result <- ping_ip(ip)
ping_log <- rbind(ping_log, ping_result)
View(ping_log)
